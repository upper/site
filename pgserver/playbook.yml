- hosts: "postgres_playground"

  tasks:

    - name: set container name
      set_fact:
        container_name: "{{ prefix }}postgres_demo"

    - name: create postgres data directory
      file:
        path: "{{ data_directory }}/postgresql"
        state: directory

    - name: upload booktown.sql
      copy:
        src: ./booktown.sql
        dest: "{{ data_directory }}/postgresql/booktown.sql"

    - name: run postgresql
      docker_container:
        image: postgres:17
        name: "{{ container_name }}"
        restart_policy: always
        recreate: yes
        memory: 512m
        memory_swap: 0
        memory_swappiness: 0
        ulimits:
          - nofile:256:512
          - nproc:128
        volumes:
          - "{{ container_base_dir }}/booktown.sql:/booktown.sql"
        env:
          POSTGRES_USER: "{{ postgres_user }}"
          POSTGRES_PASSWORD: "{{ postgres_password }}"
        ports:
          - "{{ bind_addr }}:5432:5432"

    - name: wait a few seconds for postgresql to start...
      pause:
        seconds: 5

    - name: remove postgresql database
      postgresql_db:
        login_host: "{{ postgres_host }}"
        login_password: "{{ postgres_password }}"
        login_user: "{{ postgres_user }}"
        name: booktown
        state: absent

    - name: remove user demouser
      postgresql_user:
        login_host: "{{ postgres_host }}"
        login_password: "{{ postgres_password }}"
        login_user: "{{ postgres_user }}"
        name: demouser
        state: absent

    - name: add postgresql user
      postgresql_user:
        login_host: "{{ postgres_host }}"
        login_password: "{{ postgres_password }}"
        login_user: "{{ postgres_user }}"
        name: demouser
        password: demop4ss

    - name: add postgresql database
      postgresql_db:
        login_host: "{{ postgres_host }}"
        login_password: "{{ postgres_password }}"
        login_user: "{{ postgres_user }}"
        name: booktown
        owner: demouser

    - name: load database dump
      shell: "docker exec -t {{ container_name }} bash -c 'psql -Udemouser booktown < /booktown.sql'"

    - name: remove postgresql privileges
      postgresql_privs:
        login_host: "{{ postgres_host }}"
        login_password: "{{ postgres_password }}"
        login_user: "{{ postgres_user }}"
        db: booktown
        state: absent
        roles: demouser
        priv: ALL
        objs: ALL_IN_SCHEMA

    - name: make postgresql user read-only
      postgresql_privs:
        login_host: "{{ postgres_host }}"
        login_password: "{{ postgres_password }}"
        login_user: "{{ postgres_user }}"
        db: booktown
        roles: demouser
        priv: SELECT
        objs: ALL_IN_SCHEMA

    - name: add to docker network
      docker_network:
        name: "{{ network }}"
        state: present
        appends: yes
        connected:
          - "{{ container_name }}"
