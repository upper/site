- name: "set container facts"
  set_fact:
    image_name: "nginx"
    image_tag: "alpine"
    container_name: "nginx"
    container_base_dir: "{{ services_base_dir }}/nginx"
    app_bind_port: "80"
- name: "set docker facts"
  set_fact:
    image_full_name: "{{ image_name }}:{{ image_tag }}"
    container_bind_port: "{{ container_bind_port | default(app_bind_port) }}"
- name: "create config directory"
  file:
    path: "{{ container_base_dir }}/config"
    state: "directory"
- name: "upload config file"
  copy:
    content: "{{ lookup('template', '../sites.j2') }}"
    dest: "{{ container_base_dir }}/config/sites"
- name: "test nginx config"
  command:
    docker run --rm -v {{ container_base_dir }}/config/sites:/etc/nginx/conf.d/default.conf {{ image_full_name }} nginx -t
  register: nginx_test
- name: "stop if nginx config is invalid"
  fail:
    msg: "nginx config is invalid"
  when: "nginx_test.rc != 0"
- name: "pull docker image: {{ image_full_name }}"
  docker_image:
    name: "{{ image_full_name }}"
    source: "pull"
    state: "present"
- name: "stop container: {{ container_name }}"
  docker_container:
    name: "{{ container_name }}"
    state: "stopped"
  ignore_errors: "yes"
- name: "(re)start container: {{ container_name }}"
  docker_container:
    name: "{{ container_name }}"
    image: "{{ image_full_name }}"
    state: "started"
    restart_policy: "always"
    volumes:
      - "{{ container_base_dir }}/config/sites:/etc/nginx/conf.d/default.conf"
    keep_volumes: "no"
    networks:
      - name: "{{ network_name }}"
    ports:
      - "{{ container_bind_ip }}:{{ container_bind_port }}:{{ app_bind_port }}"
    env:
      ENV: "{{ env }}"
